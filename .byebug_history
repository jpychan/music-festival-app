continue
@first_five_results][:outbound_leg]["Duration"]
continue
@first_five_results[1][:outbound_leg]["Duration"]
continue
@first_five_results[1][:outbound_leg]["Duration"].class == String
@first_five_results[1][:outbound_leg]["Duration"].class
@first_five_results[3][:outbound_leg]["Duration"]
@first_five_results[2][:outbound_leg]["Duration"]
@first_five_results[1][:outbound_leg]["Duration"]
@first_five_results[0][:outbound_leg]["Duration"]
@first_five_results[4][:outbound_leg]["Duration"]
@first_five_results[4][:inbound_leg]["Duration"]
@first_five_results[3][:inbound_leg]["Duration"]
@first_five_results[1][:inbound_leg]["Duration"]
@first_five_results[2][:inbound_leg]["Duration"]
@first_five_results[0][:inbound_leg]["Duration"]
@first_five_results[0][:inbound_leg]
@first_five_results[0]["inbound_leg"]
@first_five_results[0]
continue
@first_five_results[j][:inbound_leg]["Duration"]
continue
@first_five_results[j][:inbound_leg]["Duration"]
continue
@first_five_results[j][:inbound_leg]["Duration"]
continue
@first_five_results[j][:inbound_leg]["Duration"]
next
@first_five_results[j][:inbound_leg]["Duration"]
next
@first_five_results[j][:inbound_leg]["Duration"]
      @first_five_results[j][:inbound_leg]["Duration"]
next
      @first_five_results[j][:inbound_leg]
      @first_five_results[j][:inbound_leg]["Duration"]
next
      @first_five_results[j][:inbound_leg]["Duration"]
continue
      @first_five_results[j][:inbound_leg]["Duration"]
continue
next
continue
j
continue
@first_five_results[j][:outbound_leg]["Duration"]
continue
j
continue
next
j
continue
j
continue
j
continue
j
next
@first_five_results[j][:outbound_leg]["Duration"]
next
@first_five_results[j][:outbound_leg]["Duration"]
continue
@first_five_results[j][:outbound_leg]["Duration"]
next
@first_five_results[j][:outbound_leg]["Duration"]
continue
@first_five_results[j][:outbound_leg]["Duration"]
@first_five_results[1][:outbound_leg]["Duration"]
continue
@first_five_results[1][:outbound_leg]["Duration"]
next
@first_five_results[1][:outbound_leg]["Duration"]
continue
@first_five_results[0][:outbound_leg]["Duration"]
next
continue
minutes_in_words(1295)
@first_five_results[1][:outbound_leg]["Duration"].class
@first_five_results[1][:outbound_leg]["Duration"]
@first_five_results[0][:outbound_leg]["Duration"]
      @first_five_results[j][:outbound_leg]["Duration"] = minutes_in_words(@first_five_results[j][:outbound_leg]["Duration"].to_i)
continue
@first_five_results[j][:outbound_leg]["Duration"] = minutes_in_words(@first_five_results[j][:outbound_leg]["Duration"].to_i)
@first_five_results[j][:outbound_leg]["Duration"] = minutes_in_words(@first_five_results[j][:outbound_leg]["Duration"])
continue
=> "10 minutes"
minutes_in_words(10)
end
  distance_of_time_in_words(Time.at(0), Time.at(minutes * 60))
def minutes_in_words(minutes)
include ActionView::Helpers::DateHelper
Time.at(t).utc.strftime("%H:%M:%S")
Time.at(t).utc.s
t = 236 # seconds
=> "00:03:56"
Time.at(t).utc.strftime("%H:%M:%S")
t = 236 # seconds
include ActionView::Helpers::DateHelper
distance_of_time_in_words(3600)
distance_of_time_in_words(from_time, from_time + 50.minutes)  
from_time = Time.now
distance_of_time_in_words(0, time)
distance_of_time_in_words(time)
time = @first_five_results[0][:outbound_leg]["Duration"]
@first_five_results[0][:outbound_leg]["Duration"]
continue
@first_five_results
continue
@first_five_results[0][:outbound_leg]["Stops"].length
@first_five_results[0][:outbound_leg]["Stops"]
@first_five_results[0][:outbound_leg]
@first_five_results[0][:arrival_carrier]
@first_five_results[:arrival_carrier]
@first_five_results[0]
continue
@first_five_results[0][:arrival_carrier]
@first_five_results[0]
exit
response
continue
params
continue
step
next
@festivals.length
next
@festivals.length
next
date
next
continue
next
user
next
festival_json
next
exit
request.body
request
http.request(request)
response['location']
polling_url
next
url.port
url.host
url
next
params
step
next
step
params
@first_five_results
exit
params[:adult]
params[:adults]
params[:departure_airport]
request.body
http.request(request)
response
polling_url
+  end
+    departure != arrival ? true : false
+  end +  def self.different_airport?(departure, arrival)
+    departure != arrival ? true : false
 +  def self.different_airport?(departure, arrival)
request
festival
response
exit
next
continue
params
quit
continue
response.body
response
continue
params
next
continue
params
continue
params
next
continue
params
next
continue
next
quit
next
params
continue
quit
      params[:departure_airport] = Airport.find(params[:airport_id])[:iata_code].downcase
      params[:departure_airport] = Airport.find(params[:airport_id])[:iata_code]
params
continue
contnue
quit
params
continue
quit
params
continue
data
next
response.body
response
exit
p
polling_url
polling_urrl
response
exit
f = Festival.find(245)
request.body
outbound_date
festival
departure_airport
arrival_airport
polling_url
request.body
request
response
polling_url
exit
data
exit
response
continue
data
next
response.body
response
next
response
next
response
continue
outbound_date
continue
googl_resp
googl_data
continue
googl_dist
dest
quit
googl_dist
continue
origin
googl_dist
continue
googl_data
google_data
