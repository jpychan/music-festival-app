continue
query
params
quit
continue
params
quit
params
continue
next
@first_five_results.class
@first_five_results.length
@first_five_results
next
j
@first_five_results.length - 1
continue
j
continue
next
@first_five_results
data["Itineraries"].length
@first_five_results.length
@first_five_results
j
continue
next
j
continue
next
 outbound_leg_id = @first_five_results[j]["OutboundLegId"]
@first_five_results[j]["OutboundLegId"]
@first_five_results[j]
continue
outbound_leg_id
next
continue
next
@first_five_results.length
next
j
next
continue
next
continue
i
next
i
next
continue
next
@first_five_results
@first_five_resuts
@first-five_results
next
continue
next
continue
@results
@resuls
next
@first_five_results[0]
@first_five_results
next
continue
@results
next
legs
next
continue
next
@data.length
next
response
respose
continue
arrival_airport
response.body
response
continue
data
continue
next
continue
next
@polling_url
continue
next
continue
next
response
continue
next
continue
@results
next
@data
next
continue
legs
next
response
quit
arrival_airport["airports"][0]["code"]
arrival_airport["airports"]["code"]
arrival_airport["airports"]
arrival_airport
next
continue
response.gsub!(/\);$/, '')
esponse.gsub!(/\);$/, '')
response
continue
next
response
next
quit
response = response.body
JSON.parse(response.body)
response.body
response
next
response
next
url
next
long
lat
continue
lat.to_s
lat
continue
quit
date
continue
quit
next
continue
quit
test = date[1].match(/^[a-zA-Z]/) 
test.nil?
test.true?
test = date[1].match(/^[a-zA-Z]/) 
date[1][0]
date[1].starts_with?(%r/^[a-zA-Z]/) 
date[1].starts_with?('%r/^[a-zA-Z]/') 
date[1].starts_with?(%r/^[a-zA-Z]/) 
date[1] =~ %r/^[a-zA-Z]/
date[1].match(/^[a-zA-Z]/) 
date[1]
if date[1].match(/^[a-zA-Z]/) 
date[1].match(/^[a-zA-Z]/) 
date[1].start_with?('/\w/')
date[1].start_with?(/\w/)
date[1].start_with?('/\w/')
date[1].start_with?('\w')
date
next
festival.id
quit
continue
quit
nextquit
month
next
date
next
quit
clear
      date = date[1].split(/,|./)
date
quit
date
 date = date[1].split(/,|./)
month
next
quit
next
      date = date[1].split(/,|./)
quit
      date = date[1].split(',|.')
quit
      date = date[1].split('/,|./')
next
quit
      date = date.split('/,|./')
      date = date[1].split('/,|./')
date
next
month
next
continue
next
@results.class
next
@results
quit
continue
@results["airports"][0].to_json
@results["airports"][0]
@results["airports"]
@results
continue
@results["airports"].length
@results["airports"]
@results
@result
continue
response.class
response
continue
JSON.parse(response)
next
response
next
response
next
continue
response.body
response
continue
response
continue
response.body
response
continue
response
response.body
response[1]
response[0]
response = response.body.split('\(')
response.body.split('\(')
response.body[0]
response.body
response
JSON.parse(response.body)
continue
@results = JSON.parse(@results)
@results
continue
response.header.each_header {|k, v| puts "#{k} = #{v}" }
response.header.each_header {|k, v| puts "#{key} = #{value}" }
response[:content_type]
response[content_type]
response["content_type"]
response["server"]
response[:server]
response[:content-type]
response.each_header
response.header
response.headers
response.body
reponse.body
response.inspect
response.header
response.headers
